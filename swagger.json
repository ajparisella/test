{
  "openapi": "3.0.1",
  "info": {
    "title": "ContractLogix API",
    "description": "An API for external applications and ContractLogix.",
    "termsOfService": "https://www.contractlogix.com",
    "contact": {
      "name": "The API Support Department",
      "url": "https://www.contractlogix.com",
      "email": "developmentsupport@contractlogix.com"
    },
    "license": {
      "name": "Use under CLX LICX",
      "url": "https://www.contractlogix.com"
    },
    "version": "v1"
  },
  "paths": {
    "/external/api/contacts/{id}": {
      "get": {
        "tags": [
          "ApiContact"
        ],
        "summary": "Get the details of a Contact record.  If mediaType 'application/clx.hateoas+json' is used then a list of\r\nurls will be returned in the HATEOAS format to show associated records and actions which can be perform on this record.",
        "operationId": "GetContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "includeArchived",
            "in": "query",
            "description": "Whether to include archived records in the results",
            "schema": {
              "type": "boolean",
              "description": "Whether to include archived records in the results",
              "default": false
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Defaults to 0",
            "schema": {
              "type": "integer",
              "description": "Defaults to 0",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "outputFormatType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JsonOutputFormatTypeEnum"
            }
          },
          {
            "name": "includeLookupIds",
            "in": "query",
            "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
            "schema": {
              "type": "boolean",
              "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "ApiContact"
        ],
        "summary": "Archives the Contact record",
        "operationId": "DeleteContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "ApiContact"
        ],
        "summary": "Updates a Contact record",
        "operationId": "UpdateContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactForUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactForUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactForUpdateDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactForUpdateDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactForUpdateDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactForUpdateDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactForUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "patch": {
        "tags": [
          "ApiContact"
        ],
        "summary": "Updates specific fields for a Contact record",
        "operationId": "PartialUpdateContact",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactForUpdateDtoJsonPatchDocument"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactForUpdateDtoJsonPatchDocument"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactForUpdateDtoJsonPatchDocument"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactForUpdateDtoJsonPatchDocument"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactForUpdateDtoJsonPatchDocument"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactForUpdateDtoJsonPatchDocument"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactForUpdateDtoJsonPatchDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/contacts": {
      "get": {
        "tags": [
          "ApiContact"
        ],
        "summary": "Gets an array of Contact records based on the parameters (filter, fields, orderby, pagenumber, pagesize)",
        "operationId": "GetContacts",
        "parameters": [
          {
            "name": "Version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SearchQuery",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CustomObjectName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ShowFieldLabels",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ParentRecordType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ParentRecordId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "DateFiltersCanIncludeTime",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeArchived",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeUpdatedByApiOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeLookupIds",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "outputFormatType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JsonOutputFormatTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "ApiContact"
        ],
        "summary": "Creates a Contact record",
        "operationId": "CreateContacts",
        "parameters": [
          {
            "name": "outputFormatType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JsonOutputFormatTypeEnum"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactForCreationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactForCreationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactForCreationDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactForCreationDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactForCreationDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactForCreationDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactForCreationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/contacts/{id}/partial": {
      "put": {
        "tags": [
          "ApiContact"
        ],
        "summary": "Updates specific fields on a Contact record. Any fields not included in the request body will keep existing values.",
        "operationId": "PartialUpdateContact2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Request body, in the format normally accepted by a PUT, which includes only the properties that need to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/organizations/{organizationId}/contacts": {
      "get": {
        "tags": [
          "ApiContact"
        ],
        "summary": "Gets an array of Contacts associated with the Organization",
        "operationId": "GetContactsForOrganization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "includeLookupIds",
            "in": "query",
            "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
            "schema": {
              "type": "boolean",
              "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/contracts/{contractId}/contacts": {
      "get": {
        "tags": [
          "ApiContact"
        ],
        "summary": "Gets an array of Contacts associated with the Contract",
        "operationId": "GetContactsForContract",
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "includeLookupIds",
            "in": "query",
            "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
            "schema": {
              "type": "boolean",
              "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/contracts/versions/{contractVersionId}/contacts": {
      "get": {
        "tags": [
          "ApiContact"
        ],
        "summary": "Gets an array of Contacts associated with a Contract Version",
        "operationId": "GetContactsForContractVersion",
        "parameters": [
          {
            "name": "contractVersionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "includeLookupIds",
            "in": "query",
            "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
            "schema": {
              "type": "boolean",
              "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "ApiContact"
        ],
        "summary": "Associates a contact with a contract, or updates the association type(s) for an existing contact.",
        "operationId": "CreateContactForContract",
        "parameters": [
          {
            "name": "contractVersionId",
            "in": "path",
            "description": "Contract version ID with which to associate the contact",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Contract version ID with which to associate the contact",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Contact data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactAssociationForCreationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactAssociationForCreationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactAssociationForCreationDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactAssociationForCreationDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactAssociationForCreationDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactAssociationForCreationDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactAssociationForCreationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/contracts/{contractBinderId}/contacts": {
      "post": {
        "tags": [
          "ApiContact"
        ],
        "summary": "Associates a contact with a contract, or updates the association type(s) for an existing contact.",
        "operationId": "CreateContactForContractBinder",
        "parameters": [
          {
            "name": "contractBinderId",
            "in": "path",
            "description": "Contract ID with which to associate the contact",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Contract ID with which to associate the contact",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Contact data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactAssociationForCreationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactAssociationForCreationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactAssociationForCreationDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactAssociationForCreationDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactAssociationForCreationDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactAssociationForCreationDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/ContactAssociationForCreationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/contracts/versions/{contractVersionId}/contacts/{contactId}": {
      "delete": {
        "tags": [
          "ApiContact"
        ],
        "summary": "Archives a contact association with a contract",
        "operationId": "DeleteContactForContractVersion",
        "parameters": [
          {
            "name": "contractVersionId",
            "in": "path",
            "description": "Contract version ID from which to remove the associated contact",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Contract version ID from which to remove the associated contact",
              "format": "int64"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "description": "The ID of the contact to remove from the contract",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the contact to remove from the contract",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/contracts/{contractBinderId}/contacts/{contactId}": {
      "delete": {
        "tags": [
          "ApiContact"
        ],
        "summary": "Archives a contact association with a contract",
        "operationId": "DeleteContactForContract",
        "parameters": [
          {
            "name": "contractBinderId",
            "in": "path",
            "description": "Contract ID from which to remove the associated contact",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Contract ID from which to remove the associated contact",
              "format": "int64"
            }
          },
          {
            "name": "contactId",
            "in": "path",
            "description": "The ID of the contact to remove from the contract",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The ID of the contact to remove from the contract",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/contracts/{id}": {
      "get": {
        "tags": [
          "ApiContract"
        ],
        "summary": "Get the details of a Contract record.  If mediaType 'application/clx.hateoas+json' is used then a list of\r\nurls will be returned in the HATEOAS format to show associated records and actions which can be perform on this record.",
        "operationId": "GetContract",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "includeArchived",
            "in": "query",
            "description": "Whether to include archived records in the results",
            "schema": {
              "type": "boolean",
              "description": "Whether to include archived records in the results",
              "default": false
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "outputFormatType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JsonOutputFormatTypeEnum"
            }
          },
          {
            "name": "includeLookupIds",
            "in": "query",
            "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
            "schema": {
              "type": "boolean",
              "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "ApiContract"
        ],
        "summary": "Archives a Contract record",
        "operationId": "DeleteContract",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "ApiContract"
        ],
        "summary": "Updates a Contract record",
        "operationId": "UpdateContract",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "patch": {
        "tags": [
          "ApiContract"
        ],
        "summary": "Updates specific fields for a Contract record",
        "operationId": "PartialUpdateContract",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDtoJsonPatchDocument"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDtoJsonPatchDocument"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDtoJsonPatchDocument"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDtoJsonPatchDocument"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDtoJsonPatchDocument"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDtoJsonPatchDocument"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDtoJsonPatchDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/contracts/{id}/versions": {
      "get": {
        "tags": [
          "ApiContract"
        ],
        "summary": "Get all versions of a Contract record.  If mediaType 'application/clx.hateoas+json' is used then a list of\r\nurls will be returned in the HATEOAS format to show associated records and actions which can be perform on this record.",
        "operationId": "GetContractVersions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "includeArchived",
            "in": "query",
            "description": "Whether to include archived records in the results",
            "schema": {
              "type": "boolean",
              "description": "Whether to include archived records in the results",
              "default": false
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "includeLookupIds",
            "in": "query",
            "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
            "schema": {
              "type": "boolean",
              "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/contracts/versions/{id}": {
      "get": {
        "tags": [
          "ApiContract"
        ],
        "summary": "Get a specific version of a Contract record.  If mediaType 'application/clx.hateoas+json' is used then a list of\r\nurls will be returned in the HATEOAS format to show associated records and actions which can be perform on this record.",
        "operationId": "GetContractVersion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Contract Version ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Contract Version ID",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "includeArchived",
            "in": "query",
            "description": "Whether to include archived records in the results",
            "schema": {
              "type": "boolean",
              "description": "Whether to include archived records in the results",
              "default": false
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "includeLookupIds",
            "in": "query",
            "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
            "schema": {
              "type": "boolean",
              "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "ApiContract"
        ],
        "summary": "Archives a Contract Version record",
        "operationId": "DeleteContractVersion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Contract Version ID to archive",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Contract Version ID to archive",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "ApiContract"
        ],
        "summary": "Updates a Contract Version record",
        "operationId": "UpdateContractVersion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Contract version ID to update",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Contract version ID to update",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "patch": {
        "tags": [
          "ApiContract"
        ],
        "summary": "Updates specific fields for a Contract Version record",
        "operationId": "PartialUpdateContractVersion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Contract Version ID to update",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Contract Version ID to update",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDtoJsonPatchDocument"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDtoJsonPatchDocument"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDtoJsonPatchDocument"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDtoJsonPatchDocument"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDtoJsonPatchDocument"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDtoJsonPatchDocument"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/ContractForUpdateDtoJsonPatchDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/contracts": {
      "get": {
        "tags": [
          "ApiContract"
        ],
        "summary": "Gets an array of Contracts records based on the parameters (filter, fields, orderby, pagenumber, pagesize)",
        "operationId": "GetContracts",
        "parameters": [
          {
            "name": "ContractType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Title",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "OrganizationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "AllVersions",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SearchQuery",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CustomObjectName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ShowFieldLabels",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ParentRecordType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ParentRecordId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "DateFiltersCanIncludeTime",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeArchived",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeUpdatedByApiOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeLookupIds",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "outputFormatType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JsonOutputFormatTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "ApiContract"
        ],
        "summary": "Creates a Contract record",
        "operationId": "CreateContracts",
        "parameters": [
          {
            "name": "outputFormatType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JsonOutputFormatTypeEnum"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractForCreationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractForCreationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContractForCreationDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContractForCreationDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContractForCreationDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ContractForCreationDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/ContractForCreationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/contracts/associations/{associatedEntity}": {
      "get": {
        "tags": [
          "ApiContract"
        ],
        "summary": "Gets an array of items associated with contracts, based on the parameters (filters, fields, orderby, pagenumber, pagesize)",
        "operationId": "GetContractAssociations",
        "parameters": [
          {
            "name": "Version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SearchQuery",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CustomObjectName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ShowFieldLabels",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ParentRecordType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ParentRecordId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "DateFiltersCanIncludeTime",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeArchived",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeUpdatedByApiOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeLookupIds",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "associatedEntity",
            "in": "path",
            "description": "Can be set to either \"Contacts\" or a custom object URL name (plural form of the custom object name).",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Can be set to either \"Contacts\" or a custom object URL name (plural form of the custom object name).",
              "nullable": true
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/contracts/{id}/partial": {
      "put": {
        "tags": [
          "ApiContract"
        ],
        "summary": "Updates specific fields on a Contract record. Any fields not included in the request body will keep existing values.",
        "operationId": "PartialUpdateContract2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Request body, in the format normally accepted by a PUT, which includes only the properties that need to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/contracts/versions/{id}/partial": {
      "put": {
        "tags": [
          "ApiContract"
        ],
        "summary": "Updates specific fields on a Contract Version record. Any fields not included in the request body will keep existing values.",
        "operationId": "PartialUpdateContractVersion2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Contract Version ID to update",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Contract Version ID to update",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Request body, in the format normally accepted by a PUT, which includes only the properties that need to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/organizations/{organizationId}/contracts": {
      "get": {
        "tags": [
          "ApiContract"
        ],
        "summary": "Gets Contracts for the specified Organization",
        "operationId": "GetContractsForOrganization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "includeLookupIds",
            "in": "query",
            "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
            "schema": {
              "type": "boolean",
              "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/customs": {
      "get": {
        "tags": [
          "ApiCustomObject"
        ],
        "summary": "Returns a list of all custom objects defined",
        "operationId": "GetCustomObjectNames",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/workato/customs": {
      "get": {
        "tags": [
          "ApiCustomObject"
        ],
        "summary": "Returns a list of all custom objects defined",
        "operationId": "GetWorkatoCustomObjectNames",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/customs/{customObjectTypeName}/{id}": {
      "get": {
        "tags": [
          "ApiCustomObject"
        ],
        "summary": "Get the details of a CustomObject record.  If mediaType 'application/clx.hateoas+json' is used then a list of\r\nurls will be returned in the HATEOAS format to show associated records and actions which can be perform on this record.",
        "operationId": "GetCustomObject",
        "parameters": [
          {
            "name": "customObjectTypeName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "includeArchived",
            "in": "query",
            "description": "Whether to include archived records in the results",
            "schema": {
              "type": "boolean",
              "description": "Whether to include archived records in the results",
              "default": false
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "outputFormatType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JsonOutputFormatTypeEnum"
            }
          },
          {
            "name": "includeLookupIds",
            "in": "query",
            "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
            "schema": {
              "type": "boolean",
              "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "ApiCustomObject"
        ],
        "summary": "Updates a CustomObject record",
        "operationId": "UpdateCustomObject",
        "parameters": [
          {
            "name": "customObjectTypeName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomObjectForUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomObjectForUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomObjectForUpdateDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CustomObjectForUpdateDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/CustomObjectForUpdateDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/CustomObjectForUpdateDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/CustomObjectForUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "ApiCustomObject"
        ],
        "summary": "Archives the CustomObject record",
        "operationId": "DeleteCustomObject",
        "parameters": [
          {
            "name": "customObjectTypeName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/customs/{customObjectTypeName}": {
      "get": {
        "tags": [
          "ApiCustomObject"
        ],
        "summary": "Gets an array of CustomObjects records based on the parameters (filter, fields, orderby, pagenumber, pagesize)",
        "operationId": "GetCustomObjects",
        "parameters": [
          {
            "name": "customObjectTypeName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "Version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SearchQuery",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CustomObjectName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ShowFieldLabels",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ParentRecordType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ParentRecordId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "DateFiltersCanIncludeTime",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeArchived",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeUpdatedByApiOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeLookupIds",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "outputFormatType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JsonOutputFormatTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "ApiCustomObject"
        ],
        "summary": "Creates a CustomObject record",
        "operationId": "CustomObject",
        "parameters": [
          {
            "name": "customObjectTypeName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomObjectForCreationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomObjectForCreationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CustomObjectForCreationDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CustomObjectForCreationDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/CustomObjectForCreationDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/CustomObjectForCreationDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/CustomObjectForCreationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/customs/{customObjectTypeName}/{id}/partial": {
      "put": {
        "tags": [
          "ApiCustomObject"
        ],
        "summary": "Updates specific fields on a Custom Object record. Any fields not included in the request body will keep existing values.",
        "operationId": "PartialUpdateCustomObject2",
        "parameters": [
          {
            "name": "customObjectTypeName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Request body, in the format normally accepted by a PUT, which includes only the properties that need to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/organizations/{organizationId}/custom/{customObjectTypeName}": {
      "get": {
        "tags": [
          "ApiCustomObject"
        ],
        "summary": "Gets an array of custom objects associated with an organization",
        "operationId": "GetCustomObjectsForOrganization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "customObjectTypeName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "includeLookupIds",
            "in": "query",
            "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
            "schema": {
              "type": "boolean",
              "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "ApiCustomObject"
        ],
        "summary": "Associates a custom object with an organization",
        "operationId": "CreateCustomObjectForOrganization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "customObjectTypeName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForCreationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForCreationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForCreationDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForCreationDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForCreationDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForCreationDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForCreationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/contracts/{cId}/custom/{customObjectTypeName}": {
      "get": {
        "tags": [
          "ApiCustomObject"
        ],
        "summary": "Gets an array of custom objects associated with a contract",
        "operationId": "GetCustomObjectsForContract",
        "parameters": [
          {
            "name": "cId",
            "in": "path",
            "description": "Contract version ID for which to retrieve associated custom objects",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Contract version ID for which to retrieve associated custom objects",
              "format": "int64"
            }
          },
          {
            "name": "customObjectTypeName",
            "in": "path",
            "description": "Type of custom objects to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Type of custom objects to retrieve",
              "nullable": true
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Optional media type to return the results",
            "schema": {
              "type": "string",
              "description": "Optional media type to return the results",
              "nullable": true
            }
          },
          {
            "name": "includeLookupIds",
            "in": "query",
            "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
            "schema": {
              "type": "boolean",
              "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "ApiCustomObject"
        ],
        "summary": "Associates a custom object with a contract",
        "operationId": "CreateCustomObjectForContract",
        "parameters": [
          {
            "name": "cId",
            "in": "path",
            "description": "Contract version ID with which to associate the custom object",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Contract version ID with which to associate the custom object",
              "format": "int64"
            }
          },
          {
            "name": "customObjectTypeName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForCreationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForCreationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForCreationDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForCreationDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForCreationDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForCreationDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForCreationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/documents/{documentId}/custom/{customObjectTypeName}": {
      "get": {
        "tags": [
          "ApiCustomObject"
        ],
        "summary": "Gets an array of custom objects associated with a document",
        "operationId": "GetCustomObjectsForDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "Document ID for which to retrieve associated custom objects",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Document ID for which to retrieve associated custom objects",
              "format": "int64"
            }
          },
          {
            "name": "customObjectTypeName",
            "in": "path",
            "description": "Type of custom objects to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Type of custom objects to retrieve",
              "nullable": true
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Optional media type to return the results",
            "schema": {
              "type": "string",
              "description": "Optional media type to return the results",
              "nullable": true
            }
          },
          {
            "name": "includeLookupIds",
            "in": "query",
            "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
            "schema": {
              "type": "boolean",
              "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/contacts/{contactId}/custom/{customObjectTypeName}": {
      "get": {
        "tags": [
          "ApiCustomObject"
        ],
        "summary": "Gets an array of custom objects associated with a contact",
        "operationId": "GetCustomObjectsForContact",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "customObjectTypeName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "includeLookupIds",
            "in": "query",
            "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
            "schema": {
              "type": "boolean",
              "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "ApiCustomObject"
        ],
        "summary": "Associates a custom object with a contact",
        "operationId": "CreateCustomObjectForContact",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "customObjectTypeName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForCreationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForCreationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForCreationDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForCreationDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForCreationDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForCreationDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForCreationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/organizations/{organizationId}/custom/{customObjectTypeName}/{customObject_Relationship_Join}": {
      "put": {
        "tags": [
          "ApiCustomObject"
        ],
        "summary": "Updates (replaces) a custom object association with an organization",
        "operationId": "UpdateCustomObjectForOrganization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "customObjectTypeName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "customObject_Relationship_Join",
            "in": "path",
            "description": "Identifies the association between the parent organization and the custom object",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Identifies the association between the parent organization and the custom object",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForUpdateDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForUpdateDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForUpdateDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForUpdateDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "ApiCustomObject"
        ],
        "summary": "Archives a custom object association with an organization",
        "operationId": "DeleteCustomObjectForOrganization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "customObjectTypeName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "customObject_Relationship_Join",
            "in": "path",
            "description": "Identifies the association between the parent organization and the custom object",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Identifies the association between the parent organization and the custom object",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/contracts/{cId}/custom/{customObjectTypeName}/{customObject_Relationship_Join}": {
      "put": {
        "tags": [
          "ApiCustomObject"
        ],
        "summary": "Updates (replaces) a custom object association with a contract",
        "operationId": "UpdateCustomObjectForContract",
        "parameters": [
          {
            "name": "cId",
            "in": "path",
            "description": "Contract version ID that is the owner of the association being updated",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Contract version ID that is the owner of the association being updated",
              "format": "int64"
            }
          },
          {
            "name": "customObjectTypeName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "customObject_Relationship_Join",
            "in": "path",
            "description": "Identifies the association between the parent contract and the custom object",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Identifies the association between the parent contract and the custom object",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForUpdateDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForUpdateDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForUpdateDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForUpdateDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "ApiCustomObject"
        ],
        "summary": "Archives a custom object association with a contract",
        "operationId": "DeleteCustomObjectForContract",
        "parameters": [
          {
            "name": "cId",
            "in": "path",
            "description": "Contract version ID from which to remove the associated custom object",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Contract version ID from which to remove the associated custom object",
              "format": "int64"
            }
          },
          {
            "name": "customObjectTypeName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "customObject_Relationship_Join",
            "in": "path",
            "description": "Identifies the association between the parent contract and the custom object",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Identifies the association between the parent contract and the custom object",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/contacts/{contactId}/custom/{customObjectTypeName}/{customObject_Relationship_Join}": {
      "put": {
        "tags": [
          "ApiCustomObject"
        ],
        "summary": "Updates (replaces) a custom object association with a contact",
        "operationId": "UpdateCustomObjectForContact",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "customObjectTypeName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "customObject_Relationship_Join",
            "in": "path",
            "description": "Identifies the association between the parent contact and the custom object",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Identifies the association between the parent contact and the custom object",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForUpdateDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForUpdateDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForUpdateDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForUpdateDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/RelationshipForUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "ApiCustomObject"
        ],
        "summary": "Archives a custom object association with a contact",
        "operationId": "DeleteCustomObjectForContact",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "customObjectTypeName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "customObject_Relationship_Join",
            "in": "path",
            "description": "Identifies the association between the parent contact and the custom object",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Identifies the association between the parent contact and the custom object",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/process/{customObjectTypeName}": {
      "post": {
        "tags": [
          "ApiCustomProcessing"
        ],
        "summary": "This endpoint is used to batch CustomObject records for update and/or insertion.  By default, records will be looked up by the unique identifier\r\nthat is provided.  If a record is found it will be updated.  If the request.AddIfNotFound = true, and the record is not found it will add the record\r\nto the system.",
        "description": "Sample request:\r\n            \r\nPOST /process/Providers\r\n{\r\n    \"UniqueIdentifierFieldName\": \"Provider Number\",\r\n    \"data\":[\r\n    {\r\n        \"name\": null,\r\n        \"notes\": null,\r\n        \"organizationOwnerships\": null,\r\n        \"customObjectType\": \"Provider\",\r\n        \"creationDate\": \"2021-06-14T20:16:43.7019312\",\r\n        \"createdBy\": \"API User\",\r\n        \"lastUpdated\": \"2021-06-14T20:17:35.7588595\",\r\n        \"updatedBy\": \"API User\",\r\n        \"isArchived\": false,\r\n        \"Provider Name\": \"Provider-0-a223\",\r\n        \"Provider Number\": \"Pro-No659\"\r\n     }\r\n    ]\r\n}",
        "operationId": "AddUpdateObjects",
        "parameters": [
          {
            "name": "customObjectTypeName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessUpdateDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProcessUpdateDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProcessUpdateDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ProcessUpdateDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/ProcessUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BulkProcessingResults"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkProcessingResults"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkProcessingResults"
                }
              },
              "application/clx.hateoas+json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkProcessingResults"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BulkProcessingResults"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BulkProcessingResults"
                }
              }
            }
          }
        }
      }
    },
    "/external/api/documents/{id}": {
      "get": {
        "tags": [
          "ApiDocument"
        ],
        "summary": "Get the details of a Document record.  If mediaType 'application/clx.hateoas+json' is used then a list of\r\nurls will be returned in the HATEOAS format to show associated records and actions which can be perform on this record.",
        "operationId": "GetDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "includeArchived",
            "in": "query",
            "description": "Whether to include archived records in the results",
            "schema": {
              "type": "boolean",
              "description": "Whether to include archived records in the results",
              "default": false
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 2
            }
          },
          {
            "name": "outputFormatType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JsonOutputFormatTypeEnum"
            }
          },
          {
            "name": "includeLookupIds",
            "in": "query",
            "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
            "schema": {
              "type": "boolean",
              "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "ApiDocument"
        ],
        "summary": "Archives the Document record",
        "operationId": "DeleteDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/documents": {
      "get": {
        "tags": [
          "ApiDocument"
        ],
        "summary": "Gets an array of Document records based on the parameters (filter, fields, orderby, pagenumber, pagesize)",
        "operationId": "GetDocuments",
        "parameters": [
          {
            "name": "Version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SearchQuery",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CustomObjectName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ShowFieldLabels",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ParentRecordType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ParentRecordId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "DateFiltersCanIncludeTime",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeArchived",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeUpdatedByApiOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeLookupIds",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "outputFormatType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JsonOutputFormatTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "ApiDocument"
        ],
        "summary": "Creates a Document record",
        "operationId": "CreateDocument",
        "parameters": [
          {
            "name": "outputFormatType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JsonOutputFormatTypeEnum"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentForCreationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentForCreationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentForCreationDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DocumentForCreationDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DocumentForCreationDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/DocumentForCreationDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/DocumentForCreationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/documents/{documentId}/download": {
      "get": {
        "tags": [
          "ApiDocument"
        ],
        "summary": "Downloads a document",
        "operationId": "DownloadLatestVersion",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "Document ID to download",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Document ID to download",
              "format": "int64"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Optional version number of the document to download.  When not specified, the latest version is returned.",
            "schema": {
              "type": "integer",
              "description": "Optional version number of the document to download.  When not specified, the latest version is returned.",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "enableRangeProcessing",
            "in": "query",
            "description": "Enables chunking",
            "schema": {
              "type": "boolean",
              "description": "Enables chunking",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/organizations/{organizationId}/documents": {
      "get": {
        "tags": [
          "ApiDocument"
        ],
        "summary": "Gets an array of Documents associated with the Organization",
        "operationId": "GetDocumentsForOrganization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "includeLookupIds",
            "in": "query",
            "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
            "schema": {
              "type": "boolean",
              "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/contracts/{contractId}/documents": {
      "get": {
        "tags": [
          "ApiDocument"
        ],
        "summary": "Gets an array of Documents associated with the Contract",
        "operationId": "GetDocumentsForContract",
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "includeLookupIds",
            "in": "query",
            "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
            "schema": {
              "type": "boolean",
              "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/contacts/{contactId}/documents": {
      "get": {
        "tags": [
          "ApiDocument"
        ],
        "summary": "Gets an array of Documents associated with the Contact",
        "operationId": "GetDocumentsForContact",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "includeLookupIds",
            "in": "query",
            "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
            "schema": {
              "type": "boolean",
              "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/organizations/{id}": {
      "get": {
        "tags": [
          "ApiOrganization"
        ],
        "summary": "Get the details of an Organization record.  If mediaType 'application/clx.hateoas+json' is used then a list of\r\nurls will be returned in the HATEOAS format to show associated records and actions which can be perform on this record.",
        "operationId": "GetOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "includeArchived",
            "in": "query",
            "description": "Whether to include archived records in the results",
            "schema": {
              "type": "boolean",
              "description": "Whether to include archived records in the results",
              "default": false
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "outputFormatType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JsonOutputFormatTypeEnum"
            }
          },
          {
            "name": "includeLookupIds",
            "in": "query",
            "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
            "schema": {
              "type": "boolean",
              "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization object shaped by requested fields"
          },
          "404": {
            "description": "If record for id is not found"
          }
        }
      },
      "delete": {
        "tags": [
          "ApiOrganization"
        ],
        "summary": "Archives the Organization record",
        "operationId": "DeleteOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "ApiOrganization"
        ],
        "summary": "Updates an Organization record",
        "operationId": "UpdateOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationForUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationForUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationForUpdateDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationForUpdateDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationForUpdateDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationForUpdateDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationForUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "patch": {
        "tags": [
          "ApiOrganization"
        ],
        "summary": "Updates specific fields for an Organization record",
        "operationId": "PartialUpdateOrganization",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationForUpdateDtoJsonPatchDocument"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationForUpdateDtoJsonPatchDocument"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationForUpdateDtoJsonPatchDocument"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationForUpdateDtoJsonPatchDocument"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationForUpdateDtoJsonPatchDocument"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationForUpdateDtoJsonPatchDocument"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationForUpdateDtoJsonPatchDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/organizations": {
      "get": {
        "tags": [
          "ApiOrganization"
        ],
        "summary": "Gets an array of Organizations records based on the parameters (filter, fields, orderby, pagenumber, pagesize)",
        "operationId": "GetOrganizations",
        "parameters": [
          {
            "name": "Version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SearchQuery",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CustomObjectName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ShowFieldLabels",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ParentRecordType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ParentRecordId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "DateFiltersCanIncludeTime",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeArchived",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeUpdatedByApiOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeLookupIds",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "outputFormatType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JsonOutputFormatTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "ApiOrganization"
        ],
        "summary": "Creates an Organization record",
        "operationId": "CreateOrganization",
        "parameters": [
          {
            "name": "outputFormatType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JsonOutputFormatTypeEnum"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationForCreationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationForCreationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationForCreationDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationForCreationDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationForCreationDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationForCreationDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationForCreationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/organizations/{id}/partial": {
      "put": {
        "tags": [
          "ApiOrganization"
        ],
        "summary": "Updates specific fields on an Organization record. Any fields not included in the request body will keep existing values.",
        "operationId": "PartialUpdateOrganization2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Request body, in the format normally accepted by a PUT, which includes only the properties that need to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/lists": {
      "get": {
        "tags": [
          "ApiPickList"
        ],
        "summary": "Gets all available lists, and the labels of their items.",
        "operationId": "GetAllLists",
        "parameters": [
          {
            "name": "includeArchived",
            "in": "query",
            "description": "Whether to include archived data",
            "schema": {
              "type": "boolean",
              "description": "Whether to include archived data",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "ApiPickList"
        ],
        "summary": "Creates a new list from the information provided",
        "operationId": "CreateList",
        "requestBody": {
          "description": "The data for the new list",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PickListForCreationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PickListForCreationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PickListForCreationDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PickListForCreationDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PickListForCreationDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/PickListForCreationDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/PickListForCreationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/lists/{id}": {
      "get": {
        "tags": [
          "ApiPickList"
        ],
        "summary": "Gets a single list, and the ids/names of its items.",
        "operationId": "GetList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the list to return",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The id of the list to return",
              "format": "int64"
            }
          },
          {
            "name": "includeArchived",
            "in": "query",
            "description": "Whether to include archived data",
            "schema": {
              "type": "boolean",
              "description": "Whether to include archived data",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "ApiPickList"
        ],
        "summary": "Updates an existing list.\r\n<p>Lists used internally by the system cannot be archived.  The ContractLogix.DTO.PickList.PickListForManipulationDto.IsArchived flag for such lists is ignored.  All other data will be saved.\r\n</p>The same restriction also applies to list items used internally by the system.\r\n<p>Otherwise, this operation archives any items currently in the list that are missing in the request body, adds any new items, and updates any existing items.\r\n</p>Existing items are looked up by id, including archived items. It is important to supply correct ids for existing archived items to update and/or restore them.",
        "operationId": "UpdateList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the list to update",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The id of the list to update",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "The data model of the list to save.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PickListForUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PickListForUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PickListForUpdateDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PickListForUpdateDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PickListForUpdateDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/PickListForUpdateDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/PickListForUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/workato/lists/{customFieldLabel}": {
      "get": {
        "tags": [
          "ApiPickList"
        ],
        "summary": "Gets a single list, and the ids/names of its items.",
        "operationId": "GetListFromFieldName",
        "parameters": [
          {
            "name": "customFieldLabel",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PickListTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/requests/{id}": {
      "get": {
        "tags": [
          "ApiRequest"
        ],
        "summary": "Get the details of a Request record.  If mediaType 'application/clx.hateoas+json' is used then a list of\r\nurls will be returned in the HATEOAS format to show associated records and actions which can be performed on this record.",
        "operationId": "GetRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "includeArchived",
            "in": "query",
            "description": "Whether to include archived records in the results",
            "schema": {
              "type": "boolean",
              "description": "Whether to include archived records in the results",
              "default": false
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "outputFormatType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JsonOutputFormatTypeEnum"
            }
          },
          {
            "name": "includeLookupIds",
            "in": "query",
            "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
            "schema": {
              "type": "boolean",
              "description": "Set to true to return both id and name (as a JSON object) for fields that reference picklist items or other objects",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "ApiRequest"
        ],
        "summary": "Archives a Request record",
        "operationId": "DeleteRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "ApiRequest"
        ],
        "summary": "Updates a Request record",
        "operationId": "UpdateRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestForUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestForUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestForUpdateDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RequestForUpdateDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RequestForUpdateDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/RequestForUpdateDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/RequestForUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "patch": {
        "tags": [
          "ApiRequest"
        ],
        "summary": "Updates specific fields for a Request record",
        "operationId": "PartialUpdateRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestForUpdateDtoJsonPatchDocument"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestForUpdateDtoJsonPatchDocument"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestForUpdateDtoJsonPatchDocument"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RequestForUpdateDtoJsonPatchDocument"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RequestForUpdateDtoJsonPatchDocument"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/RequestForUpdateDtoJsonPatchDocument"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/RequestForUpdateDtoJsonPatchDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/requests/contracts": {
      "get": {
        "tags": [
          "ApiRequest"
        ],
        "summary": "Gets an array of Contract Request records based on the parameters (filter, fields, orderby, pagenumber, pagesize)",
        "operationId": "GetContractRequests",
        "parameters": [
          {
            "name": "Version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SearchQuery",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CustomObjectName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ShowFieldLabels",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ParentRecordType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ParentRecordId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "DateFiltersCanIncludeTime",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeArchived",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeUpdatedByApiOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeLookupIds",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "outputFormatType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JsonOutputFormatTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/requests/contacts": {
      "get": {
        "tags": [
          "ApiRequest"
        ],
        "summary": "Gets an array of Contact Request records based on the parameters (filter, fields, orderby, pagenumber, pagesize)",
        "operationId": "GetContactRequests",
        "parameters": [
          {
            "name": "Version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SearchQuery",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CustomObjectName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ShowFieldLabels",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ParentRecordType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ParentRecordId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "DateFiltersCanIncludeTime",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeArchived",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeUpdatedByApiOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeLookupIds",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "outputFormatType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JsonOutputFormatTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/requests/organizations": {
      "get": {
        "tags": [
          "ApiRequest"
        ],
        "summary": "Gets an array of Organization Request records based on the parameters (filter, fields, orderby, pagenumber, pagesize)",
        "operationId": "GetOrganizationRequests",
        "parameters": [
          {
            "name": "Version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SearchQuery",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CustomObjectName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ShowFieldLabels",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ParentRecordType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ParentRecordId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            }
          },
          {
            "name": "DateFiltersCanIncludeTime",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeArchived",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ExcludeUpdatedByApiOnly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeLookupIds",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "outputFormatType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JsonOutputFormatTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/requests": {
      "post": {
        "tags": [
          "ApiRequest"
        ],
        "summary": "Creates a Request record",
        "operationId": "CreateRequest",
        "parameters": [
          {
            "name": "outputFormatType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/JsonOutputFormatTypeEnum"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestForCreationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestForCreationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestForCreationDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RequestForCreationDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RequestForCreationDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/RequestForCreationDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/RequestForCreationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/requests/{id}/partial": {
      "put": {
        "tags": [
          "ApiRequest"
        ],
        "summary": "Updates specific fields on a Request record. Any fields not included in the request body will keep existing values.",
        "operationId": "PartialUpdateRequest2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Request body, in the format normally accepted by a PUT, which includes only the properties that need to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/BaseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/system/workato/{objectType}s/fields": {
      "get": {
        "tags": [
          "ApiSystem"
        ],
        "summary": "Returns a list of only custom fields for a standard object type for Workato",
        "operationId": "GetWorkatoFields",
        "parameters": [
          {
            "name": "objectType",
            "in": "path",
            "description": "Type of object, e.g. Contract",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Type of object, e.g. Contract",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/system/workato/custom/{customObjectTypeName}s/fields": {
      "get": {
        "tags": [
          "ApiSystem"
        ],
        "operationId": "GetWorkatoCustomObjectFields",
        "parameters": [
          {
            "name": "customObjectTypeName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/system/{objectType}s/fields": {
      "get": {
        "tags": [
          "ApiSystem"
        ],
        "summary": "Returns a list of only custom fields for a standard object type",
        "operationId": "GetFields",
        "parameters": [
          {
            "name": "objectType",
            "in": "path",
            "description": "Type of object, e.g. Contract",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Type of object, e.g. Contract",
              "nullable": true
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IncludeTypeEnum"
            }
          },
          {
            "name": "formatType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/FormatTypeEnum"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Default to 1",
            "schema": {
              "type": "integer",
              "description": "Default to 1",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "IsList",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false,
              "nullable": true
            }
          },
          {
            "name": "forCreate",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean",
              "description": "",
              "default": false,
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/external/api/system/custom/{customObjectTypeName}/fields": {
      "get": {
        "tags": [
          "ApiSystem"
        ],
        "summary": "Returns a list of all fields for a custom object type",
        "operationId": "GetCustomObjectFields",
        "parameters": [
          {
            "name": "customObjectTypeName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/workato/jwttoken": {
      "get": {
        "tags": [
          "WorkatoApi"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/workato/customer/{tenantId}": {
      "get": {
        "tags": [
          "WorkatoApi"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "WorkatoApi"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "WorkatoApi"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "WorkatoApi"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/workato/addRecipe": {
      "post": {
        "tags": [
          "WorkatoApi"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWorkatoRecipesDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWorkatoRecipesDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddWorkatoRecipesDTO"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AddWorkatoRecipesDTO"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/AddWorkatoRecipesDTO"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/AddWorkatoRecipesDTO"
              }
            },
            "application/clx.organization.full+xml": {
              "schema": {
                "$ref": "#/components/schemas/AddWorkatoRecipesDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "JsonOutputFormatTypeEnum": {
        "enum": [
          "Normal",
          "Pascal"
        ],
        "type": "string",
        "format": ""
      },
      "ContactForUpdateDto": {
        "required": [
          "contactType",
          "firstName",
          "lastName",
          "organizationOwnerships"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string"
          },
          "jobTitle": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "contactType": {
            "type": "string"
          },
          "department": {
            "type": "string",
            "nullable": true
          },
          "businessUnit": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "webAddress": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "nullable": true
          },
          "extension": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "organizationOwnerships": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isArchived": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "stage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "OperationType": {
        "enum": [
          "Add",
          "Remove",
          "Replace",
          "Move",
          "Copy",
          "Test",
          "Invalid"
        ],
        "type": "string",
        "format": ""
      },
      "ContactForUpdateDtoOperation": {
        "type": "object",
        "properties": {
          "value": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IContractResolver": {
        "type": "object",
        "additionalProperties": false
      },
      "ContactForUpdateDtoJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactForUpdateDtoOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "ContactForCreationDto": {
        "required": [
          "contactType",
          "firstName",
          "lastName",
          "organizationOwnerships"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string"
          },
          "jobTitle": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "contactType": {
            "type": "string"
          },
          "department": {
            "type": "string",
            "nullable": true
          },
          "businessUnit": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "webAddress": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "nullable": true
          },
          "extension": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "organizationOwnerships": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isArchived": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "stage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "BaseDto": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "ContactAssociationForCreationDto": {
        "type": "object",
        "properties": {
          "contactId": {
            "type": "integer",
            "format": "int64"
          },
          "associationTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContractForUpdateDto": {
        "required": [
          "contractType",
          "externalOrganizationIds",
          "organizationOwnerships"
        ],
        "type": "object",
        "properties": {
          "versionNotes": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "internalOrganizationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "internalOrganizationId": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "externalOrganizationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "parentContractId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "department": {
            "type": "string",
            "nullable": true
          },
          "businessUnit": {
            "type": "string",
            "nullable": true
          },
          "contractOwnerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "stage": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "renewalDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "contractType": {
            "type": "string"
          },
          "executionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "contractValue": {
            "type": "number",
            "format": "double"
          },
          "terminationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isLocked": {
            "type": "boolean"
          },
          "organizationOwnerships": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "submittedBy": {
            "type": "string",
            "nullable": true
          },
          "submittedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isArchived": {
            "type": "boolean"
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "ContractForUpdateDtoOperation": {
        "type": "object",
        "properties": {
          "value": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContractForUpdateDtoJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractForUpdateDtoOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "ContractForCreationDto": {
        "required": [
          "contractType",
          "externalOrganizationIds",
          "organizationOwnerships"
        ],
        "type": "object",
        "properties": {
          "versionNotes": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "internalOrganizationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "internalOrganizationId": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "externalOrganizationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "parentContractId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "department": {
            "type": "string",
            "nullable": true
          },
          "businessUnit": {
            "type": "string",
            "nullable": true
          },
          "contractOwnerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "stage": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "renewalDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "contractType": {
            "type": "string"
          },
          "executionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "contractValue": {
            "type": "number",
            "format": "double"
          },
          "terminationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isLocked": {
            "type": "boolean"
          },
          "organizationOwnerships": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "submittedBy": {
            "type": "string",
            "nullable": true
          },
          "submittedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isArchived": {
            "type": "boolean"
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "CustomObjectForUpdateDto": {
        "required": [
          "name",
          "organizationOwnerships"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "organizationOwnerships": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isArchived": {
            "type": "boolean"
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "CustomObjectForCreationDto": {
        "required": [
          "name",
          "organizationOwnerships"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "organizationOwnerships": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "isArchived": {
            "type": "boolean"
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "RelationshipForCreationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "RelationshipForUpdateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "ProcessUpdateDto": {
        "type": "object",
        "properties": {
          "uniqueIdentifierFieldName": {
            "type": "string",
            "nullable": true
          },
          "addIfNotFound": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomObjectForCreationDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExceptionDto": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CustomObjectForCreationDto"
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BulkProcessingResults": {
        "type": "object",
        "properties": {
          "totalAdded": {
            "type": "integer",
            "format": "int32"
          },
          "totalUpdated": {
            "type": "integer",
            "format": "int32"
          },
          "totalExceptionItems": {
            "type": "integer",
            "format": "int32"
          },
          "totalSkippedObjects": {
            "type": "integer",
            "format": "int32"
          },
          "adddObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomObjectForCreationDto"
            },
            "nullable": true
          },
          "updatedObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomObjectForCreationDto"
            },
            "nullable": true
          },
          "skippedObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomObjectForCreationDto"
            },
            "nullable": true
          },
          "exception": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DocumentForCreationDto": {
        "required": [
          "documentType"
        ],
        "type": "object",
        "properties": {
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "file": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "parentRecordType": {
            "type": "string",
            "nullable": true
          },
          "parentRecordId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "documentType": {
            "type": "string"
          },
          "department": {
            "type": "string",
            "nullable": true
          },
          "businessUnit": {
            "type": "string",
            "nullable": true
          },
          "documentOwnerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "fileType": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "documentStatus": {
            "type": "string",
            "nullable": true
          },
          "revision": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "receivedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "receivedBy": {
            "type": "string",
            "nullable": true
          },
          "checkoutDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isCheckedOut": {
            "type": "boolean"
          },
          "checkoutBy": {
            "type": "string",
            "nullable": true
          },
          "checkoutRecipients": {
            "type": "string",
            "nullable": true
          },
          "lockedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockedBy": {
            "type": "string",
            "nullable": true
          },
          "organizationownerships": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isArchived": {
            "type": "boolean"
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "OrganizationForUpdateDto": {
        "required": [
          "name",
          "organizationOwnerships",
          "organizationType"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "organizationType": {
            "type": "string"
          },
          "industry": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "webAddress": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "organizationOwnerships": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "isInternal": {
            "type": "boolean"
          },
          "parentOrganizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isArchived": {
            "type": "boolean"
          },
          "stage": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "OrganizationForUpdateDtoOperation": {
        "type": "object",
        "properties": {
          "value": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganizationForUpdateDtoJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationForUpdateDtoOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "OrganizationForCreationDto": {
        "required": [
          "name",
          "organizationOwnerships",
          "organizationType"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "organizationType": {
            "type": "string"
          },
          "industry": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "webAddress": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "organizationOwnerships": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "isInternal": {
            "type": "boolean"
          },
          "parentOrganizationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "isArchived": {
            "type": "boolean"
          },
          "stage": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "LookupSortOrderBy": {
        "enum": [
          "None",
          "AlphabeticalAscending",
          "AlphabeticalDescending",
          "IdAscending",
          "IdDescending",
          "Order"
        ],
        "type": "string",
        "format": ""
      },
      "PickListItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "isDefault": {
            "type": "boolean"
          },
          "isArchived": {
            "type": "boolean"
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "PickListForCreationDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "$ref": "#/components/schemas/LookupSortOrderBy"
          },
          "isArchived": {
            "type": "boolean"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PickListItemDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "PickListForUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "$ref": "#/components/schemas/LookupSortOrderBy"
          },
          "isArchived": {
            "type": "boolean"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PickListItemDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "PickListTypeEnum": {
        "enum": [
          "CustomFieldName",
          "PickListName"
        ],
        "type": "string",
        "format": ""
      },
      "RequestForUpdateDto": {
        "required": [
          "requestObjectType",
          "requestType"
        ],
        "type": "object",
        "properties": {
          "contractId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "requestType": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "stage": {
            "type": "string",
            "nullable": true
          },
          "contractType": {
            "type": "string",
            "nullable": true
          },
          "department": {
            "type": "string",
            "nullable": true
          },
          "externalOrganizationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "isSubmit": {
            "type": "boolean"
          },
          "requestOwnerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "submittedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "versionType": {
            "type": "string",
            "nullable": true
          },
          "existingContractId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "submittedBy": {
            "type": "string",
            "nullable": true
          },
          "submittedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isArchived": {
            "type": "boolean"
          },
          "requestObjectType": {
            "type": "string"
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "RequestForUpdateDtoOperation": {
        "type": "object",
        "properties": {
          "value": {
            "type": "object",
            "additionalProperties": false,
            "nullable": true
          },
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestForUpdateDtoJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestForUpdateDtoOperation"
            },
            "nullable": true,
            "readOnly": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "RequestForCreationDto": {
        "required": [
          "requestObjectType",
          "requestType"
        ],
        "type": "object",
        "properties": {
          "contractId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "requestType": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "stage": {
            "type": "string",
            "nullable": true
          },
          "contractType": {
            "type": "string",
            "nullable": true
          },
          "department": {
            "type": "string",
            "nullable": true
          },
          "externalOrganizationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "isSubmit": {
            "type": "boolean"
          },
          "requestOwnerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "submittedById": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "versionType": {
            "type": "string",
            "nullable": true
          },
          "existingContractId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "submittedBy": {
            "type": "string",
            "nullable": true
          },
          "submittedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isArchived": {
            "type": "boolean"
          },
          "requestObjectType": {
            "type": "string"
          }
        },
        "additionalProperties": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "IncludeTypeEnum": {
        "enum": [
          "All",
          "First",
          "Custom"
        ],
        "type": "string",
        "format": ""
      },
      "FormatTypeEnum": {
        "enum": [
          "Default",
          "Workato"
        ],
        "type": "string",
        "format": ""
      },
      "AddWorkatoRecipesDTO": {
        "type": "object",
        "properties": {
          "manifestId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "authorizationUrl": "/connect/authorize",
            "tokenUrl": "/connect/token",
            "scopes": {
              "IdentityServerApi": "DEMO - full access"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth2": [
        "IdentityServerApi"
      ]
    }
  ]
}